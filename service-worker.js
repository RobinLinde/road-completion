!function(){"use strict";const e=1604309322409,t="cache"+e,a=["/client/client.a98b8f33.js","/client/inject_styles.5607aec6.js","/client/index.6c1a908d.js","/client/Chart.ddaa11c4.js"].concat(["/service-worker-index.html","/.gitkeep"]),c=new Set(a);self.addEventListener("install",(e=>{e.waitUntil(caches.open(t).then((e=>e.addAll(a))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const a of e)a!==t&&await caches.delete(a);self.clients.claim()})))})),self.addEventListener("fetch",(t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const a=new URL(t.request.url),n=a.protocol.startsWith("http"),s=a.hostname===self.location.hostname&&a.port!==self.location.port,i=a.host===self.location.host&&c.has(a.pathname),o="only-if-cached"===t.request.cache&&!i;!n||s||o||t.respondWith((async()=>i&&await caches.match(t.request)||async function(t){const a=await caches.open("offline"+e);try{const e=await fetch(t);return a.put(t,e.clone()),e}catch(e){const c=await a.match(t);if(c)return c;throw e}}(t.request))())}))}();
